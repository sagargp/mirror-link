# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mirror.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='mirror.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0cmirror.proto\"\x07\n\x05\x45mpty\"(\n\x06Sender\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x10\n\x08\x63\x61llsign\x18\x02 \x01(\t\"6\n\nAudioChunk\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0e\n\x06sender\x18\x02 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x03 \x01(\x0c\x32\x83\x01\n\x0c\x41udioService\x12 \n\tSendAudio\x12\x0b.AudioChunk\x1a\x06.Empty\x12(\n\x0fSendAudioStream\x12\x0b.AudioChunk\x1a\x06.Empty(\x01\x12\'\n\x0eGetAudioStream\x12\x06.Empty\x1a\x0b.AudioChunk0\x01\x62\x06proto3')
)




_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16,
  serialized_end=23,
)


_SENDER = _descriptor.Descriptor(
  name='Sender',
  full_name='Sender',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='Sender.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='callsign', full_name='Sender.callsign', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=25,
  serialized_end=65,
)


_AUDIOCHUNK = _descriptor.Descriptor(
  name='AudioChunk',
  full_name='AudioChunk',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='AudioChunk.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sender', full_name='AudioChunk.sender', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='AudioChunk.data', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=67,
  serialized_end=121,
)

DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['Sender'] = _SENDER
DESCRIPTOR.message_types_by_name['AudioChunk'] = _AUDIOCHUNK
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'mirror_pb2'
  # @@protoc_insertion_point(class_scope:Empty)
  ))
_sym_db.RegisterMessage(Empty)

Sender = _reflection.GeneratedProtocolMessageType('Sender', (_message.Message,), dict(
  DESCRIPTOR = _SENDER,
  __module__ = 'mirror_pb2'
  # @@protoc_insertion_point(class_scope:Sender)
  ))
_sym_db.RegisterMessage(Sender)

AudioChunk = _reflection.GeneratedProtocolMessageType('AudioChunk', (_message.Message,), dict(
  DESCRIPTOR = _AUDIOCHUNK,
  __module__ = 'mirror_pb2'
  # @@protoc_insertion_point(class_scope:AudioChunk)
  ))
_sym_db.RegisterMessage(AudioChunk)



_AUDIOSERVICE = _descriptor.ServiceDescriptor(
  name='AudioService',
  full_name='AudioService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=124,
  serialized_end=255,
  methods=[
  _descriptor.MethodDescriptor(
    name='SendAudio',
    full_name='AudioService.SendAudio',
    index=0,
    containing_service=None,
    input_type=_AUDIOCHUNK,
    output_type=_EMPTY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SendAudioStream',
    full_name='AudioService.SendAudioStream',
    index=1,
    containing_service=None,
    input_type=_AUDIOCHUNK,
    output_type=_EMPTY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAudioStream',
    full_name='AudioService.GetAudioStream',
    index=2,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_AUDIOCHUNK,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_AUDIOSERVICE)

DESCRIPTOR.services_by_name['AudioService'] = _AUDIOSERVICE

# @@protoc_insertion_point(module_scope)
